import NumericCodec
import AlphanumericCodec
import Latin1Codec
import KanjiCodec

encode = NumericCodec.encode
decode = NumericCodec.decode
print('-' * 60)
print(' '*20 + 'Testing: Numeric')
print('-' * 60)
print('Case: ISO/IEC 18004:2015 7.4.3 EXAMPLE 1')
print()
print('01234567 <- input message')
print('000000110001010110011000011 <- encoded message')
print(encode('01234567') + ' <- encoded by NumericCodec.encode')
print(decode(encode('01234567')) + ' <- decoded by NumericCodec.decode')
print('-' * 60)
print('Case: ISO/IEC 18004:2015 7.4.3 EXAMPLE 2')
print()
print('0123456789012345 <- input message')
print('000000110001010110011010100110111000010100111010100101 <- encoded message')
print(encode('0123456789012345') + ' <- encoded by NumericCodec.encode')
print(decode(encode('0123456789012345')) + ' <- decoded by NumericCodec.decode')
print('-' * 60)
print('Case: Example from "https://www.thonky.com/qr-code-tutorial/numeric-mode-encoding"')
print()
print('8675309 <- input message')
print('110110001110000100101001 <- encoded message')
print(encode('8675309') + ' <- encoded by NumericCodec.encode')
print(decode(encode('8675309')) + ' <- decoded by NumericCodec.decode')

encode = AlphanumericCodec.encode
decode = AlphanumericCodec.decode
print('-' * 60)
print(' '*20 + 'Testing: Alphanumeric')
print('-' * 60)
print('Case: ISO/IEC 18004:2015 7.4.4 EXAMPLE')
print()
print('AC-42 <- input message')
print('0011100111011100111001000010 <- encoded message')
print(encode('AC-42') + ' <- encoded by AlphanumericCodec.encode')
print(decode(encode('AC-42')) + ' <- decoded by AlphanumericCodec.decode')
print('-' * 60)
print('Case: Example from "https://www.thonky.com/qr-code-tutorial/alphanumeric-mode-encoding"')
print()
print('HELLO WORLD <- input message')
print('0110000101101111000110100010111001011011100010011010100001101 <- encoded message')
print(encode('HELLO WORLD') + ' <- encoded by AlphanumericCodec.encode')
print(decode(encode('HELLO WORLD')) + ' <- decoded by AlphanumericCodec.decode')

encode = Latin1Codec.encode
decode = Latin1Codec.decode
print('-' * 60)
print(' '*20 + 'Testing: Latin1 (ISO-8891-1)')
print('-' * 60)
print('Case: Example from "https://www.thonky.com/qr-code-tutorial/byte-mode-encoding"')
print()
print('Hello, world! <- input message')
print('01001000011001010110110001101100011011110010110000100000011101110110111101110010011011000110010000100001 <- encoded message')
print(encode('Hello, world!') + ' <- encoded by Latin1Codec.encode')
print(decode(encode('Hello, world!')) + ' <- decoded by Latin1Codec.decode')
print('-' * 60)
print('Case: Emoji using Latin1')
print()
print('«(°ö° )¬ <- input message')
print(encode('«(°ö° )¬') + ' <- encoded by Latin1Codec.encode')
print(decode(encode('«(°ö° )¬')) + ' <- decoded by Latin1Codec.decode')

encode = KanjiCodec.encode
decode = KanjiCodec.decode
print('-' * 60)
print(' '*20 + 'Testing: Kanji (Shift-JIS)')
print('-' * 60)
print('Case: Example from "https://www.thonky.com/qr-code-tutorial/kanji-mode-encoding"')
print()
print('茗荷 <- input message')
print('11010101010100011010010111 <- encoded message')
print(encode('茗荷') + ' <- encoded by KanjiCodec.encode')
print(decode(encode('茗荷')) + ' <- decoded by KanjiCodec.decode')
print('-' * 60)
print('Case: hello world in Japanese')
print()
print('こんにちは世界 <- input message')
print(encode('こんにちは世界') + ' <- encoded by KanjiCodec.encode')
print(decode(encode('こんにちは世界')) + ' <- decoded by KanjiCodec.decode')
print('-' * 60)
print('Case: Random selected characters in Shift-JIS')
print()
print('漾鑽ａ緜、熙　魍 <- input message')
print(encode('漾鑽ａ緜、熙　魍') + ' <- encoded by KanjiCodec.encode')
print(decode(encode('漾鑽ａ緜、熙　魍')) + ' <- decoded by KanjiCodec.decode')
